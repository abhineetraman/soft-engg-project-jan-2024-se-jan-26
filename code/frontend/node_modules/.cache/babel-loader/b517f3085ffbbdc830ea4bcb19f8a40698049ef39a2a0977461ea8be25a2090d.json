{"ast":null,"code":"import UserNavbar from \"../components/UserNavbar.vue\";\nimport * as common from \"../assets/common.js\";\nimport TicketCard from \"../components/TicketCard.vue\";\nimport InfoCard from \"../components/InfoCard.vue\";\nimport UserCard from \"../components/UserCard.vue\";\nexport default {\n  name: \"AdminValidateUsers\",\n  components: {\n    UserNavbar,\n    UserCard\n  },\n  data() {\n    return {\n      user_id: this.$store.getters.get_user_id,\n      unverified_new_user: []\n    };\n  },\n  created() {\n    let form = {\n      filter_status: [\"pending\"]\n    };\n    let params = \"\";\n    params = new URLSearchParams(form).toString();\n    fetch(common.AUTH_API_NEWUSERS, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        web_token: this.$store.getters.get_web_token,\n        user_id: this.user_id\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.category == \"success\") {\n        this.unverified_new_user = data.message;\n        if (this.unverified_new_user.length > 0) {\n          this.flashMessage.success({\n            message: `${this.unverified_new_user.length} unverified users found.`\n          });\n        } else {\n          this.flashMessage.success({\n            message: \"No unverified users present.\"\n          });\n        }\n      }\n      if (data.category == \"error\") {\n        this.flashMessage.error({\n          message: data.message\n        });\n      }\n    }).catch(error => {\n      this.$log.error(`Error : ${error}`);\n      this.flashMessage.error({\n        message: \"Internal Server Error\"\n      });\n    });\n  },\n  mounted() {},\n  methods: {},\n  computed: {}\n};","map":{"version":3,"names":["UserNavbar","common","TicketCard","InfoCard","UserCard","name","components","data","user_id","$store","getters","get_user_id","unverified_new_user","created","form","filter_status","params","URLSearchParams","toString","fetch","AUTH_API_NEWUSERS","method","headers","web_token","get_web_token","then","response","json","category","message","length","flashMessage","success","error","catch","$log","mounted","methods","computed"],"sources":["src/views/AdminValidateUsers.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <UserNavbar :id_=\"2\"></UserNavbar>\r\n    <b-container fluid=\"xl\">\r\n      <b-row class=\"text-start\">\r\n        <b-col cols=\"12\" sm=\"6\" md=\"6\">\r\n          <h3 style=\"text-align: center\">New Students</h3>\r\n          <div style=\"height: 550px; overflow: auto; padding: 10px\">\r\n            <div v-for=\"user in unverified_new_user\" :key=\"user.user_id\">\r\n              <div v-if=\"user.role == 'student'\">\r\n                <UserCard\r\n                  :n_user_id=\"user.user_id\"\r\n                  :first_name=\"user.first_name\"\r\n                  :last_name=\"user.last_name\"\r\n                  :email=\"user.email\"\r\n                  :role=\"user.role\"\r\n                  :show=\"true\"\r\n                ></UserCard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </b-col>\r\n        <b-col cols=\"12\" sm=\"6\" md=\"6\" style=\"border-left: dashed black\">\r\n          <h3 style=\"text-align: center\">New Support Staff</h3>\r\n          <div style=\"height: 550px; overflow: auto; padding: 10px\">\r\n            <div v-for=\"user in unverified_new_user\" :key=\"user.user_id\">\r\n              <div v-if=\"user.role == 'support'\">\r\n                <UserCard\r\n                  :n_user_id=\"user.user_id\"\r\n                  :first_name=\"user.first_name\"\r\n                  :last_name=\"user.last_name\"\r\n                  :email=\"user.email\"\r\n                  :role=\"user.role\"\r\n                  :show=\"true\"\r\n                ></UserCard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserNavbar from \"../components/UserNavbar.vue\";\r\nimport * as common from \"../assets/common.js\";\r\nimport TicketCard from \"../components/TicketCard.vue\";\r\nimport InfoCard from \"../components/InfoCard.vue\";\r\nimport UserCard from \"../components/UserCard.vue\";\r\n\r\nexport default {\r\n  name: \"AdminValidateUsers\",\r\n  components: { UserNavbar, UserCard },\r\n  data() {\r\n    return {\r\n      user_id: this.$store.getters.get_user_id,\r\n      unverified_new_user: [],\r\n    };\r\n  },\r\n  created() {\r\n    let form = {\r\n      filter_status: [\"pending\"],\r\n    };\r\n    let params = \"\";\r\n    params = new URLSearchParams(form).toString();\r\n\r\n    fetch(common.AUTH_API_NEWUSERS, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        web_token: this.$store.getters.get_web_token,\r\n        user_id: this.user_id,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.category == \"success\") {\r\n          this.unverified_new_user = data.message;\r\n          if (this.unverified_new_user.length > 0) {\r\n            this.flashMessage.success({\r\n              message: `${this.unverified_new_user.length} unverified users found.`,\r\n            });\r\n          } else {\r\n            this.flashMessage.success({\r\n              message: \"No unverified users present.\",\r\n            });\r\n          }\r\n        }\r\n        if (data.category == \"error\") {\r\n          this.flashMessage.error({\r\n            message: data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.$log.error(`Error : ${error}`);\r\n        this.flashMessage.error({\r\n          message: \"Internal Server Error\",\r\n        });\r\n      });\r\n  },\r\n  mounted() {},\r\n  methods: {},\r\n  computed: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AA6CA,OAAAA,UAAA;AACA,YAAAC,MAAA;AACA,OAAAC,UAAA;AACA,OAAAC,QAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAN,UAAA;IAAAI;EAAA;EACAG,KAAA;IACA;MACAC,OAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,WAAA;MACAC,mBAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,IAAA;MACAC,aAAA;IACA;IACA,IAAAC,MAAA;IACAA,MAAA,OAAAC,eAAA,CAAAH,IAAA,EAAAI,QAAA;IAEAC,KAAA,CAAAlB,MAAA,CAAAmB,iBAAA;MACAC,MAAA;MACAC,OAAA;QACA;QACAC,SAAA,OAAAd,MAAA,CAAAC,OAAA,CAAAc,aAAA;QACAhB,OAAA,OAAAA;MACA;IACA,GACAiB,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAlB,IAAA;MACA,IAAAA,IAAA,CAAAqB,QAAA;QACA,KAAAhB,mBAAA,GAAAL,IAAA,CAAAsB,OAAA;QACA,SAAAjB,mBAAA,CAAAkB,MAAA;UACA,KAAAC,YAAA,CAAAC,OAAA;YACAH,OAAA,UAAAjB,mBAAA,CAAAkB,MAAA;UACA;QACA;UACA,KAAAC,YAAA,CAAAC,OAAA;YACAH,OAAA;UACA;QACA;MACA;MACA,IAAAtB,IAAA,CAAAqB,QAAA;QACA,KAAAG,YAAA,CAAAE,KAAA;UACAJ,OAAA,EAAAtB,IAAA,CAAAsB;QACA;MACA;IACA,GACAK,KAAA,CAAAD,KAAA;MACA,KAAAE,IAAA,CAAAF,KAAA,YAAAA,KAAA;MACA,KAAAF,YAAA,CAAAE,KAAA;QACAJ,OAAA;MACA;IACA;EACA;EACAO,QAAA;EACAC,OAAA;EACAC,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
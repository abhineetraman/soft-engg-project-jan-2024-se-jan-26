{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * Private ModalManager helper\n * Handles controlling modal stacking zIndexes and body adjustments/classes\n */\nimport { Vue } from '../../../vue';\nimport { IS_BROWSER } from '../../../constants/env';\nimport { HOOK_EVENT_NAME_BEFORE_DESTROY } from '../../../constants/events';\nimport { addClass, getAttr, getBCR, getCS, getStyle, hasAttr, removeAttr, removeClass, requestAF, selectAll, setAttr, setStyle } from '../../../utils/dom';\nimport { isNull } from '../../../utils/inspect';\nimport { toFloat, toInteger } from '../../../utils/number'; // --- Constants ---\n// Default modal backdrop z-index\n\nvar DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments\n\nvar SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nvar SELECTOR_STICKY_CONTENT = '.sticky-top';\nvar SELECTOR_NAVBAR_TOGGLER = '.navbar-toggler'; // --- Main component ---\n// @vue/component\n\nvar ModalManager = /*#__PURE__*/Vue.extend({\n  data: function data() {\n    return {\n      modals: [],\n      baseZIndex: null,\n      scrollbarWidth: null,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalCount: function modalCount() {\n      return this.modals.length;\n    },\n    modalsAreOpen: function modalsAreOpen() {\n      return this.modalCount > 0;\n    }\n  },\n  watch: {\n    modalCount: function modalCount(newCount, oldCount) {\n      if (IS_BROWSER) {\n        this.getScrollbarWidth();\n        if (newCount > 0 && oldCount === 0) {\n          // Transitioning to modal(s) open\n          this.checkScrollbar();\n          this.setScrollbar();\n          addClass(document.body, 'modal-open');\n        } else if (newCount === 0 && oldCount > 0) {\n          // Transitioning to modal(s) closed\n          this.resetScrollbar();\n          removeClass(document.body, 'modal-open');\n        }\n        setAttr(document.body, 'data-modal-open-count', String(newCount));\n      }\n    },\n    modals: function modals(newValue) {\n      var _this = this;\n      this.checkScrollbar();\n      requestAF(function () {\n        _this.updateModals(newValue || []);\n      });\n    }\n  },\n  methods: {\n    // Public methods\n    registerModal: function registerModal(modal) {\n      var _this2 = this;\n\n      // Register the modal if not already registered\n      if (modal && this.modals.indexOf(modal) === -1) {\n        // Add modal to modals array\n        this.modals.push(modal);\n        modal.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n          _this2.unregisterModal(modal);\n        });\n      }\n    },\n    unregisterModal: function unregisterModal(modal) {\n      var index = this.modals.indexOf(modal);\n      if (index > -1) {\n        // Remove modal from modals array\n        this.modals.splice(index, 1); // Reset the modal's data\n\n        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {\n          this.resetModal(modal);\n        }\n      }\n    },\n    getBaseZIndex: function getBaseZIndex() {\n      if (isNull(this.baseZIndex) && IS_BROWSER) {\n        // Create a temporary `div.modal-backdrop` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-backdrop');\n        addClass(div, 'd-none');\n        setStyle(div, 'display', 'none');\n        document.body.appendChild(div);\n        this.baseZIndex = toInteger(getCS(div).zIndex, DEFAULT_ZINDEX);\n        document.body.removeChild(div);\n      }\n      return this.baseZIndex || DEFAULT_ZINDEX;\n    },\n    getScrollbarWidth: function getScrollbarWidth() {\n      if (isNull(this.scrollbarWidth) && IS_BROWSER) {\n        // Create a temporary `div.measure-scrollbar` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-scrollbar-measure');\n        document.body.appendChild(div);\n        this.scrollbarWidth = getBCR(div).width - div.clientWidth;\n        document.body.removeChild(div);\n      }\n      return this.scrollbarWidth || 0;\n    },\n    // Private methods\n    updateModals: function updateModals(modals) {\n      var _this3 = this;\n      var baseZIndex = this.getBaseZIndex();\n      var scrollbarWidth = this.getScrollbarWidth();\n      modals.forEach(function (modal, index) {\n        // We update data values on each modal\n        modal.zIndex = baseZIndex + index;\n        modal.scrollbarWidth = scrollbarWidth;\n        modal.isTop = index === _this3.modals.length - 1;\n        modal.isBodyOverflowing = _this3.isBodyOverflowing;\n      });\n    },\n    resetModal: function resetModal(modal) {\n      if (modal) {\n        modal.zIndex = this.getBaseZIndex();\n        modal.isTop = true;\n        modal.isBodyOverflowing = false;\n      }\n    },\n    checkScrollbar: function checkScrollbar() {\n      // Determine if the body element is overflowing\n      var _getBCR = getBCR(document.body),\n        left = _getBCR.left,\n        right = _getBCR.right;\n      this.isBodyOverflowing = left + right < window.innerWidth;\n    },\n    setScrollbar: function setScrollbar() {\n      var body = document.body; // Storage place to cache changes to margins and padding\n      // Note: This assumes the following element types are not added to the\n      // document after the modal has opened.\n\n      body._paddingChangedForModal = body._paddingChangedForModal || [];\n      body._marginChangedForModal = body._marginChangedForModal || [];\n      if (this.isBodyOverflowing) {\n        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_FIXED_CONTENT).forEach(function (el) {\n          var actualPadding = getStyle(el, 'paddingRight') || '';\n          setAttr(el, 'data-padding-right', actualPadding);\n          setStyle(el, 'paddingRight', \"\".concat(toFloat(getCS(el).paddingRight, 0) + scrollbarWidth, \"px\"));\n          body._paddingChangedForModal.push(el);\n        }); // Adjust sticky content margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_STICKY_CONTENT).forEach(function (el) /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) - scrollbarWidth, \"px\"));\n          body._marginChangedForModal.push(el);\n        }); // Adjust <b-navbar-toggler> margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_NAVBAR_TOGGLER).forEach(function (el) /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) + scrollbarWidth, \"px\"));\n          body._marginChangedForModal.push(el);\n        }); // Adjust body padding\n\n        var actualPadding = getStyle(body, 'paddingRight') || '';\n        setAttr(body, 'data-padding-right', actualPadding);\n        setStyle(body, 'paddingRight', \"\".concat(toFloat(getCS(body).paddingRight, 0) + scrollbarWidth, \"px\"));\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      var body = document.body;\n      if (body._paddingChangedForModal) {\n        // Restore fixed content padding\n        body._paddingChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-padding-right')) {\n            setStyle(el, 'paddingRight', getAttr(el, 'data-padding-right') || '');\n            removeAttr(el, 'data-padding-right');\n          }\n        });\n      }\n      if (body._marginChangedForModal) {\n        // Restore sticky content and navbar-toggler margin\n        body._marginChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-margin-right')) {\n            setStyle(el, 'marginRight', getAttr(el, 'data-margin-right') || '');\n            removeAttr(el, 'data-margin-right');\n          }\n        });\n      }\n      body._paddingChangedForModal = null;\n      body._marginChangedForModal = null; // Restore body padding\n\n      if (hasAttr(body, 'data-padding-right')) {\n        setStyle(body, 'paddingRight', getAttr(body, 'data-padding-right') || '');\n        removeAttr(body, 'data-padding-right');\n      }\n    }\n  }\n}); // Create and export our modal manager instance\n\nexport var modalManager = new ModalManager();","map":{"version":3,"names":["Vue","IS_BROWSER","HOOK_EVENT_NAME_BEFORE_DESTROY","addClass","getAttr","getBCR","getCS","getStyle","hasAttr","removeAttr","removeClass","requestAF","selectAll","setAttr","setStyle","isNull","toFloat","toInteger","DEFAULT_ZINDEX","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","SELECTOR_NAVBAR_TOGGLER","ModalManager","extend","data","modals","baseZIndex","scrollbarWidth","isBodyOverflowing","computed","modalCount","length","modalsAreOpen","watch","newCount","oldCount","getScrollbarWidth","checkScrollbar","setScrollbar","document","body","resetScrollbar","String","newValue","_this","updateModals","methods","registerModal","modal","_this2","indexOf","push","$once","unregisterModal","index","splice","_isBeingDestroyed","_isDestroyed","resetModal","getBaseZIndex","div","createElement","appendChild","zIndex","removeChild","width","clientWidth","_this3","forEach","isTop","_getBCR","left","right","window","innerWidth","_paddingChangedForModal","_marginChangedForModal","el","actualPadding","concat","paddingRight","actualMargin","marginRight","modalManager"],"sources":["/mnt/d/D/IIT Madras/SE/Project/code/code/frontend/node_modules/bootstrap-vue/esm/components/modal/helpers/modal-manager.js"],"sourcesContent":["/**\n * Private ModalManager helper\n * Handles controlling modal stacking zIndexes and body adjustments/classes\n */\nimport { Vue } from '../../../vue';\nimport { IS_BROWSER } from '../../../constants/env';\nimport { HOOK_EVENT_NAME_BEFORE_DESTROY } from '../../../constants/events';\nimport { addClass, getAttr, getBCR, getCS, getStyle, hasAttr, removeAttr, removeClass, requestAF, selectAll, setAttr, setStyle } from '../../../utils/dom';\nimport { isNull } from '../../../utils/inspect';\nimport { toFloat, toInteger } from '../../../utils/number'; // --- Constants ---\n// Default modal backdrop z-index\n\nvar DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments\n\nvar SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nvar SELECTOR_STICKY_CONTENT = '.sticky-top';\nvar SELECTOR_NAVBAR_TOGGLER = '.navbar-toggler'; // --- Main component ---\n// @vue/component\n\nvar ModalManager = /*#__PURE__*/Vue.extend({\n  data: function data() {\n    return {\n      modals: [],\n      baseZIndex: null,\n      scrollbarWidth: null,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalCount: function modalCount() {\n      return this.modals.length;\n    },\n    modalsAreOpen: function modalsAreOpen() {\n      return this.modalCount > 0;\n    }\n  },\n  watch: {\n    modalCount: function modalCount(newCount, oldCount) {\n      if (IS_BROWSER) {\n        this.getScrollbarWidth();\n\n        if (newCount > 0 && oldCount === 0) {\n          // Transitioning to modal(s) open\n          this.checkScrollbar();\n          this.setScrollbar();\n          addClass(document.body, 'modal-open');\n        } else if (newCount === 0 && oldCount > 0) {\n          // Transitioning to modal(s) closed\n          this.resetScrollbar();\n          removeClass(document.body, 'modal-open');\n        }\n\n        setAttr(document.body, 'data-modal-open-count', String(newCount));\n      }\n    },\n    modals: function modals(newValue) {\n      var _this = this;\n\n      this.checkScrollbar();\n      requestAF(function () {\n        _this.updateModals(newValue || []);\n      });\n    }\n  },\n  methods: {\n    // Public methods\n    registerModal: function registerModal(modal) {\n      var _this2 = this;\n\n      // Register the modal if not already registered\n      if (modal && this.modals.indexOf(modal) === -1) {\n        // Add modal to modals array\n        this.modals.push(modal);\n        modal.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n          _this2.unregisterModal(modal);\n        });\n      }\n    },\n    unregisterModal: function unregisterModal(modal) {\n      var index = this.modals.indexOf(modal);\n\n      if (index > -1) {\n        // Remove modal from modals array\n        this.modals.splice(index, 1); // Reset the modal's data\n\n        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {\n          this.resetModal(modal);\n        }\n      }\n    },\n    getBaseZIndex: function getBaseZIndex() {\n      if (isNull(this.baseZIndex) && IS_BROWSER) {\n        // Create a temporary `div.modal-backdrop` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-backdrop');\n        addClass(div, 'd-none');\n        setStyle(div, 'display', 'none');\n        document.body.appendChild(div);\n        this.baseZIndex = toInteger(getCS(div).zIndex, DEFAULT_ZINDEX);\n        document.body.removeChild(div);\n      }\n\n      return this.baseZIndex || DEFAULT_ZINDEX;\n    },\n    getScrollbarWidth: function getScrollbarWidth() {\n      if (isNull(this.scrollbarWidth) && IS_BROWSER) {\n        // Create a temporary `div.measure-scrollbar` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-scrollbar-measure');\n        document.body.appendChild(div);\n        this.scrollbarWidth = getBCR(div).width - div.clientWidth;\n        document.body.removeChild(div);\n      }\n\n      return this.scrollbarWidth || 0;\n    },\n    // Private methods\n    updateModals: function updateModals(modals) {\n      var _this3 = this;\n\n      var baseZIndex = this.getBaseZIndex();\n      var scrollbarWidth = this.getScrollbarWidth();\n      modals.forEach(function (modal, index) {\n        // We update data values on each modal\n        modal.zIndex = baseZIndex + index;\n        modal.scrollbarWidth = scrollbarWidth;\n        modal.isTop = index === _this3.modals.length - 1;\n        modal.isBodyOverflowing = _this3.isBodyOverflowing;\n      });\n    },\n    resetModal: function resetModal(modal) {\n      if (modal) {\n        modal.zIndex = this.getBaseZIndex();\n        modal.isTop = true;\n        modal.isBodyOverflowing = false;\n      }\n    },\n    checkScrollbar: function checkScrollbar() {\n      // Determine if the body element is overflowing\n      var _getBCR = getBCR(document.body),\n          left = _getBCR.left,\n          right = _getBCR.right;\n\n      this.isBodyOverflowing = left + right < window.innerWidth;\n    },\n    setScrollbar: function setScrollbar() {\n      var body = document.body; // Storage place to cache changes to margins and padding\n      // Note: This assumes the following element types are not added to the\n      // document after the modal has opened.\n\n      body._paddingChangedForModal = body._paddingChangedForModal || [];\n      body._marginChangedForModal = body._marginChangedForModal || [];\n\n      if (this.isBodyOverflowing) {\n        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_FIXED_CONTENT).forEach(function (el) {\n          var actualPadding = getStyle(el, 'paddingRight') || '';\n          setAttr(el, 'data-padding-right', actualPadding);\n          setStyle(el, 'paddingRight', \"\".concat(toFloat(getCS(el).paddingRight, 0) + scrollbarWidth, \"px\"));\n\n          body._paddingChangedForModal.push(el);\n        }); // Adjust sticky content margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_STICKY_CONTENT).forEach(function (el)\n        /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) - scrollbarWidth, \"px\"));\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust <b-navbar-toggler> margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_NAVBAR_TOGGLER).forEach(function (el)\n        /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) + scrollbarWidth, \"px\"));\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust body padding\n\n        var actualPadding = getStyle(body, 'paddingRight') || '';\n        setAttr(body, 'data-padding-right', actualPadding);\n        setStyle(body, 'paddingRight', \"\".concat(toFloat(getCS(body).paddingRight, 0) + scrollbarWidth, \"px\"));\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      var body = document.body;\n\n      if (body._paddingChangedForModal) {\n        // Restore fixed content padding\n        body._paddingChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-padding-right')) {\n            setStyle(el, 'paddingRight', getAttr(el, 'data-padding-right') || '');\n            removeAttr(el, 'data-padding-right');\n          }\n        });\n      }\n\n      if (body._marginChangedForModal) {\n        // Restore sticky content and navbar-toggler margin\n        body._marginChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-margin-right')) {\n            setStyle(el, 'marginRight', getAttr(el, 'data-margin-right') || '');\n            removeAttr(el, 'data-margin-right');\n          }\n        });\n      }\n\n      body._paddingChangedForModal = null;\n      body._marginChangedForModal = null; // Restore body padding\n\n      if (hasAttr(body, 'data-padding-right')) {\n        setStyle(body, 'paddingRight', getAttr(body, 'data-padding-right') || '');\n        removeAttr(body, 'data-padding-right');\n      }\n    }\n  }\n}); // Create and export our modal manager instance\n\nexport var modalManager = new ModalManager();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FAQCard from \"../components/FAQCard.vue\";\nimport UserNavbar from \"../components/UserNavbar.vue\";\nimport * as common from \"../assets/common.js\";\nimport Tagging from \"../components/Tagging.vue\";\nexport default {\n  name: \"CommonFAQs\",\n  components: {\n    UserNavbar,\n    FAQCard,\n    Tagging\n  },\n  data() {\n    return {\n      id_: null,\n      user_id: this.$store.getters.get_user_id,\n      faq_card_details: [],\n      filtered_faq_card_details: [],\n      filter_tags: [],\n      query: \"\",\n      show: true\n    };\n  },\n  created() {\n    let user_role = this.$store.getters.get_user_role;\n    if (user_role == \"student\") {\n      this.id_ = 4;\n    }\n    if (user_role == \"support\") {\n      this.id_ = 3;\n    }\n    if (user_role == \"admin\") {\n      this.id_ = 4;\n    }\n    let form = {\n      filter_status: [\"pending\"]\n    };\n    let params = \"\";\n    params = new URLSearchParams(form).toString();\n    fetch(common.FAQ_API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        web_token: this.$store.getters.get_web_token,\n        user_id: this.user_id\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.category == \"success\") {\n        this.flashMessage.success({\n          message: `Total ${data.message.length} FAQs retrieved.`\n        });\n        this.faq_card_details = data.message;\n        this.filtered_faq_card_details = data.message;\n      }\n      if (data.category == \"error\") {\n        this.flashMessage.error({\n          message: data.message\n        });\n      }\n    }).catch(error => {\n      this.$log.error(`Error : ${error}`);\n      this.flashMessage.error({\n        message: \"Internal Server Error\"\n      });\n    });\n  },\n  mounted() {},\n  methods: {\n    onTagsChanged(value) {\n      this.filter_tags = value;\n    },\n    onReset(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      // this.filtered_faq_card_details = this.faq_card_details;\n      this.filter_tags = [];\n      this.query = \"\";\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n      this.$forceUpdate();\n    },\n    filterCards() {\n      // filtered_faq_card_details\n      this.query = this.query.toLowerCase();\n      this.filtered_faq_card_details = [];\n      for (let i = 0; i < this.faq_card_details.length; i++) {\n        let card = this.faq_card_details[i];\n        let q = card.question.toLowerCase();\n        let a = card.solution.toLowerCase();\n        if (q.includes(this.query) || a.includes(this.query)) {\n          this.filtered_faq_card_details.push(card);\n        }\n      }\n      if (this.filter_tags.length > 0) {\n        let temp_list = [];\n        for (let i = 0; i < this.filtered_faq_card_details.length; i++) {\n          let card = this.filtered_faq_card_details[i];\n          if (this.filter_tags.includes(card.tag_1) || this.filter_tags.includes(card.tag_2) || this.filter_tags.includes(card.tag_3)) {\n            temp_list.push(card);\n          }\n        }\n        this.filtered_faq_card_details = temp_list;\n      }\n      this.$forceUpdate();\n    }\n  },\n  computed: {\n    check_query() {\n      // not being used in dev stage\n      return this.query.length > 0 ? true : true;\n    }\n  },\n  watch: {\n    filter_tags: {\n      handler: function (newValue, oldValue) {\n        // Note: this is a deep watcher\n        this.filterCards();\n      },\n      deep: true\n    },\n    query: {\n      handler: function (newValue, oldValue) {\n        // Note: this is a deep watcher\n        this.filterCards();\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["FAQCard","UserNavbar","common","Tagging","name","components","data","id_","user_id","$store","getters","get_user_id","faq_card_details","filtered_faq_card_details","filter_tags","query","show","created","user_role","get_user_role","form","filter_status","params","URLSearchParams","toString","fetch","FAQ_API","method","headers","web_token","get_web_token","then","response","json","category","flashMessage","success","message","length","error","catch","$log","mounted","methods","onTagsChanged","value","onReset","event","preventDefault","$nextTick","$forceUpdate","filterCards","toLowerCase","i","card","q","question","a","solution","includes","push","temp_list","tag_1","tag_2","tag_3","computed","check_query","watch","handler","newValue","oldValue","deep"],"sources":["src/views/CommonFAQs.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <UserNavbar :id_=\"id_\"></UserNavbar>\r\n\r\n    <b-container fluid=\"xl\">\r\n      <b-row>\r\n        <b-col cols=\"12\" sm=\"12\" md=\"12\">\r\n          <h3 style=\"text-align: center\">Frequently Asked Questions</h3>\r\n          <b-row>\r\n            <b-col cols=\"5\" sm=\"12\" md=\"5\">\r\n              <Tagging @tags_changed=\"onTagsChanged\"></Tagging>\r\n            </b-col>\r\n            <b-col cols=\"5\" sm=\"12\" md=\"5\">\r\n              <b-form-group>\r\n                <label for=\"input-query\">Search Query:</label>\r\n                <b-form-input\r\n                  id=\"input-query\"\r\n                  v-model=\"query\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter search query\"\r\n                  :state=\"check_query\"\r\n                  aria-describedby=\"input-live-feedback-query\"\r\n                ></b-form-input> </b-form-group\r\n            ></b-col>\r\n            <b-col cols=\"2\" sm=\"12\" md=\"2\" align-self=\"center\">\r\n              <b-form @reset=\"onReset\" v-if=\"show\" v-show=\"false\">\r\n                <b-button style=\"margin: 10px\" type=\"reset\" variant=\"danger\">Reset</b-button>\r\n              </b-form>\r\n            </b-col>\r\n          </b-row>\r\n          <div style=\"height: 550px; overflow: auto; padding: 10px\">\r\n            <div v-for=\"faq in filtered_faq_card_details\" :key=\"faq.faq_id\">\r\n              <FAQCard\r\n                :faq_id=\"faq.faq_id\"\r\n                :question=\"faq.question\"\r\n                :answer=\"faq.solution\"\r\n                :attachments=\"faq.attachments\"\r\n              ></FAQCard>\r\n            </div>\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FAQCard from \"../components/FAQCard.vue\";\r\nimport UserNavbar from \"../components/UserNavbar.vue\";\r\nimport * as common from \"../assets/common.js\";\r\nimport Tagging from \"../components/Tagging.vue\";\r\n\r\nexport default {\r\n  name: \"CommonFAQs\",\r\n  components: { UserNavbar, FAQCard, Tagging },\r\n  data() {\r\n    return {\r\n      id_: null,\r\n      user_id: this.$store.getters.get_user_id,\r\n      faq_card_details: [],\r\n      filtered_faq_card_details: [],\r\n      filter_tags: [],\r\n      query: \"\",\r\n      show: true,\r\n    };\r\n  },\r\n  created() {\r\n    let user_role = this.$store.getters.get_user_role;\r\n    if (user_role == \"student\") {\r\n      this.id_ = 4;\r\n    }\r\n    if (user_role == \"support\") {\r\n      this.id_ = 3;\r\n    }\r\n    if (user_role == \"admin\") {\r\n      this.id_ = 4;\r\n    }\r\n    let form = {\r\n      filter_status: [\"pending\"],\r\n    };\r\n    let params = \"\";\r\n    params = new URLSearchParams(form).toString();\r\n\r\n    fetch(common.FAQ_API, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        web_token: this.$store.getters.get_web_token,\r\n        user_id: this.user_id,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.category == \"success\") {\r\n          this.flashMessage.success({\r\n            message: `Total ${data.message.length} FAQs retrieved.`,\r\n          });\r\n          this.faq_card_details = data.message;\r\n          this.filtered_faq_card_details = data.message;\r\n        }\r\n        if (data.category == \"error\") {\r\n          this.flashMessage.error({\r\n            message: data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.$log.error(`Error : ${error}`);\r\n        this.flashMessage.error({\r\n          message: \"Internal Server Error\",\r\n        });\r\n      });\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    onTagsChanged(value) {\r\n      this.filter_tags = value;\r\n    },\r\n    onReset(event) {\r\n      if (event && event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      // this.filtered_faq_card_details = this.faq_card_details;\r\n      this.filter_tags = [];\r\n      this.query = \"\";\r\n      this.show = false;\r\n      this.$nextTick(() => {\r\n        this.show = true;\r\n      });\r\n      this.$forceUpdate();\r\n    },\r\n    filterCards() {\r\n      // filtered_faq_card_details\r\n      this.query = this.query.toLowerCase();\r\n      this.filtered_faq_card_details = [];\r\n      for (let i = 0; i < this.faq_card_details.length; i++) {\r\n        let card = this.faq_card_details[i];\r\n        let q = card.question.toLowerCase();\r\n        let a = card.solution.toLowerCase();\r\n        if (q.includes(this.query) || a.includes(this.query)) {\r\n          this.filtered_faq_card_details.push(card);\r\n        }\r\n      }\r\n      if (this.filter_tags.length > 0) {\r\n        let temp_list = [];\r\n        for (let i = 0; i < this.filtered_faq_card_details.length; i++) {\r\n          let card = this.filtered_faq_card_details[i];\r\n          if (\r\n            this.filter_tags.includes(card.tag_1) ||\r\n            this.filter_tags.includes(card.tag_2) ||\r\n            this.filter_tags.includes(card.tag_3)\r\n          ) {\r\n            temp_list.push(card);\r\n          }\r\n        }\r\n        this.filtered_faq_card_details = temp_list;\r\n      }\r\n\r\n      this.$forceUpdate();\r\n    },\r\n  },\r\n  computed: {\r\n    check_query() {\r\n      // not being used in dev stage\r\n      return this.query.length > 0 ? true : true;\r\n    },\r\n  },\r\n  watch: {\r\n    filter_tags: {\r\n      handler: function (newValue, oldValue) {\r\n        // Note: this is a deep watcher\r\n        this.filterCards();\r\n      },\r\n      deep: true,\r\n    },\r\n    query: {\r\n      handler: function (newValue, oldValue) {\r\n        // Note: this is a deep watcher\r\n        this.filterCards();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
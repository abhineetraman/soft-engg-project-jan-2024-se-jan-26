{"ast":null,"code":"import * as common from \"../assets/common.js\";\nimport FileUpload from \"./FileUpload.vue\";\nimport Tagging from \"./Tagging.vue\";\nexport default {\n  name: \"TicketForm\",\n  props: [\"ticket_id\", \"title\", \"description\", \"priority\", \"tags\", \"hideReset\", \"editTicket\"],\n  components: {\n    Tagging,\n    FileUpload\n  },\n  data() {\n    return {\n      priority_options: [{\n        text: \"Low\",\n        value: \"low\"\n      }, {\n        text: \"Medium\",\n        value: \"medium\"\n      }, {\n        text: \"High\",\n        value: \"high\"\n      }],\n      form: {\n        title: this.title ? this.title : \"\",\n        description: this.description ? this.description : \"\",\n        priority: this.priority ? this.priority : \"low\",\n        solution: \"\",\n        tags: [],\n        tag_1: \"\",\n        tag_2: \"\",\n        tag_3: \"\",\n        attachments: []\n      },\n      user_role: this.$store.getters.get_user_role,\n      show: true\n    };\n  },\n  created() {},\n  methods: {\n    onFileUpload(value) {\n      this.form.attachments.splice(0, this.form.attachments.length, ...value);\n      for (let i = 0; i < this.form.attachments.length; i++) {}\n    },\n    onSubmit(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      if (this.user_role == \"student\" && this.form.tags.length == 0 && this.check_title) {\n        alert(\"Choose atleast 1 tag and title should be atleast 5 characters long.\");\n      } else {\n        alert('Submitting form. Click \"Ok\" to proceed?');\n        this.$log.info(\"Submitting Ticket form\");\n        for (let i in this.form.tags) {\n          if (this.form.tags[i]) {\n            this.form[`tag_${parseInt(i) + 1}`] = this.form.tags[i];\n          }\n        }\n        let fetch_url = \"\";\n        let method = \"\";\n        if (this.editTicket) {\n          fetch_url = common.TICKET_API + `/${this.ticket_id}` + `/${this.$store.getters.get_user_id}`;\n          method = \"PUT\";\n        } else {\n          fetch_url = common.TICKET_API + `/${this.$store.getters.get_user_id}`;\n          method = \"POST\";\n        }\n        fetch(fetch_url, {\n          method: method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            web_token: this.$store.getters.get_web_token,\n            user_id: this.$store.getters.get_user_id\n          },\n          body: JSON.stringify(this.form)\n        }).then(response => response.json()).then(data => {\n          if (data.category == \"success\") {\n            this.flashMessage.success({\n              message: data.message\n            });\n            if (!this.editTicket) {\n              this.onReset();\n            }\n            if (this.user_role == \"support\") {\n              this.$emit(\"ticketResolved\");\n            }\n          }\n          if (data.category == \"error\") {\n            this.flashMessage.error({\n              message: data.message\n            });\n          }\n        }).catch(error => {\n          this.$log.error(`Error : ${error}`);\n          this.flashMessage.error({\n            message: \"Internal Server Error\"\n          });\n        });\n      }\n    },\n    onReset(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.form.title = \"\";\n      this.form.description = \"\";\n      this.solution = \"\";\n      this.form.attachments = [];\n      this.form.tags = [];\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    },\n    onTagsChanged(value) {\n      this.form.tags = value;\n    }\n  },\n  computed: {\n    check_title() {\n      return this.form.title.length > 5 ? true : false;\n    }\n  }\n};","map":{"version":3,"names":["common","FileUpload","Tagging","name","props","components","data","priority_options","text","value","form","title","description","priority","solution","tags","tag_1","tag_2","tag_3","attachments","user_role","$store","getters","get_user_role","show","created","methods","onFileUpload","splice","length","i","onSubmit","event","preventDefault","check_title","alert","$log","info","parseInt","fetch_url","method","editTicket","TICKET_API","ticket_id","get_user_id","fetch","headers","web_token","get_web_token","user_id","body","JSON","stringify","then","response","json","category","flashMessage","success","message","onReset","$emit","error","catch","$nextTick","onTagsChanged","computed"],"sources":["src/components/TicketForm.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"ticket-form\"\r\n    style=\"margin-top: 5px; margin-left: 5px; margin-right: 5px; text-align: left\"\r\n  >\r\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\r\n      <b-form-group\r\n        ><b-form-input\r\n          id=\"input-title\"\r\n          v-model=\"form.title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          :state=\"check_title\"\r\n          aria-describedby=\"input-live-feedback-title\"\r\n          :disabled=\"user_role == 'student' ? false : true\"\r\n          required\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback id=\"input-live-feedback-title\">\r\n          Title should be atleast 5 characters long.\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group\r\n        ><b-form-textarea\r\n          id=\"input-description\"\r\n          v-model=\"form.description\"\r\n          type=\"text\"\r\n          placeholder=\"Enter description (Optional)\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n          :disabled=\"user_role == 'student' ? false : true\"\r\n        ></b-form-textarea\r\n      ></b-form-group>\r\n\r\n      <Tagging\r\n        @tags_changed=\"onTagsChanged\"\r\n        v-show=\"user_role == 'student' ? true : false\"\r\n      ></Tagging>\r\n\r\n      <b-form-group\r\n        label=\"Select priority:\"\r\n        v-slot=\"{ ariaDescribedby }\"\r\n        v-show=\"user_role == 'student' ? true : false\"\r\n      >\r\n        <b-form-radio-group\r\n          id=\"radio-group-priority\"\r\n          v-model=\"form.priority\"\r\n          :options=\"priority_options\"\r\n          :aria-describedby=\"ariaDescribedby\"\r\n          name=\"radio-group-priority\"\r\n        ></b-form-radio-group>\r\n      </b-form-group>\r\n\r\n      <b-form-group v-show=\"user_role == 'student' ? false : true\"\r\n        ><b-form-textarea\r\n          id=\"input-solution\"\r\n          v-model=\"form.solution\"\r\n          type=\"text\"\r\n          placeholder=\"Enter solution\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea\r\n      ></b-form-group>\r\n\r\n      <FileUpload @file_uploading=\"onFileUpload\"></FileUpload>\r\n\r\n      <br />\r\n      <br />\r\n      <b-button style=\"margin: 10px\" type=\"submit\" variant=\"primary\">Submit</b-button>\r\n      <b-button v-show=\"hideReset ? false : true\" style=\"margin: 10px\" type=\"reset\" variant=\"danger\"\r\n        >Reset</b-button\r\n      >\r\n    </b-form>\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as common from \"../assets/common.js\";\r\nimport FileUpload from \"./FileUpload.vue\";\r\nimport Tagging from \"./Tagging.vue\";\r\n\r\nexport default {\r\n  name: \"TicketForm\",\r\n  props: [\"ticket_id\", \"title\", \"description\", \"priority\", \"tags\", \"hideReset\", \"editTicket\"],\r\n  components: { Tagging, FileUpload },\r\n  data() {\r\n    return {\r\n      priority_options: [\r\n        { text: \"Low\", value: \"low\" },\r\n        { text: \"Medium\", value: \"medium\" },\r\n        { text: \"High\", value: \"high\" },\r\n      ],\r\n      form: {\r\n        title: this.title ? this.title : \"\",\r\n        description: this.description ? this.description : \"\",\r\n        priority: this.priority ? this.priority : \"low\",\r\n        solution: \"\",\r\n        tags: [],\r\n        tag_1: \"\",\r\n        tag_2: \"\",\r\n        tag_3: \"\",\r\n        attachments: [],\r\n      },\r\n      user_role: this.$store.getters.get_user_role,\r\n      show: true,\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    onFileUpload(value) {\r\n      this.form.attachments.splice(0, this.form.attachments.length, ...value);\r\n      for (let i = 0; i < this.form.attachments.length; i++) {}\r\n    },\r\n    onSubmit(event) {\r\n      if (event && event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n\r\n      if (this.user_role == \"student\" && this.form.tags.length == 0 && this.check_title) {\r\n        alert(\"Choose atleast 1 tag and title should be atleast 5 characters long.\");\r\n      } else {\r\n        alert('Submitting form. Click \"Ok\" to proceed?');\r\n        this.$log.info(\"Submitting Ticket form\");\r\n\r\n        for (let i in this.form.tags) {\r\n          if (this.form.tags[i]) {\r\n            this.form[`tag_${parseInt(i) + 1}`] = this.form.tags[i];\r\n          }\r\n        }\r\n\r\n        let fetch_url = \"\";\r\n        let method = \"\";\r\n        if (this.editTicket) {\r\n          fetch_url =\r\n            common.TICKET_API + `/${this.ticket_id}` + `/${this.$store.getters.get_user_id}`;\r\n          method = \"PUT\";\r\n        } else {\r\n          fetch_url = common.TICKET_API + `/${this.$store.getters.get_user_id}`;\r\n          method = \"POST\";\r\n        }\r\n\r\n        fetch(fetch_url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            web_token: this.$store.getters.get_web_token,\r\n            user_id: this.$store.getters.get_user_id,\r\n          },\r\n          body: JSON.stringify(this.form),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data.category == \"success\") {\r\n              this.flashMessage.success({\r\n                message: data.message,\r\n              });\r\n              if (!this.editTicket) {\r\n                this.onReset();\r\n              }\r\n              if (this.user_role == \"support\") {\r\n                this.$emit(\"ticketResolved\");\r\n              }\r\n            }\r\n            if (data.category == \"error\") {\r\n              this.flashMessage.error({\r\n                message: data.message,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.$log.error(`Error : ${error}`);\r\n            this.flashMessage.error({\r\n              message: \"Internal Server Error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    onReset(event) {\r\n      if (event && event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      this.form.title = \"\";\r\n      this.form.description = \"\";\r\n      this.solution = \"\";\r\n      this.form.attachments = [];\r\n      this.form.tags = [];\r\n      this.show = false;\r\n      this.$nextTick(() => {\r\n        this.show = true;\r\n      });\r\n    },\r\n    onTagsChanged(value) {\r\n      this.form.tags = value;\r\n    },\r\n  },\r\n  computed: {\r\n    check_title() {\r\n      return this.form.title.length > 5 ? true : false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AA8EA,YAAAA,MAAA;AACA,OAAAC,UAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,UAAA;IAAAH,OAAA;IAAAD;EAAA;EACAK,KAAA;IACA;MACAC,gBAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAC,IAAA;QACAC,KAAA,OAAAA,KAAA,QAAAA,KAAA;QACAC,WAAA,OAAAA,WAAA,QAAAA,WAAA;QACAC,QAAA,OAAAA,QAAA,QAAAA,QAAA;QACAC,QAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,WAAA;MACA;MACAC,SAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,aAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,aAAAlB,KAAA;MACA,KAAAC,IAAA,CAAAS,WAAA,CAAAS,MAAA,SAAAlB,IAAA,CAAAS,WAAA,CAAAU,MAAA,KAAApB,KAAA;MACA,SAAAqB,CAAA,MAAAA,CAAA,QAAApB,IAAA,CAAAS,WAAA,CAAAU,MAAA,EAAAC,CAAA;IACA;IACAC,SAAAC,KAAA;MACA,IAAAA,KAAA,IAAAA,KAAA,CAAAC,cAAA;QACAD,KAAA,CAAAC,cAAA;MACA;MAEA,SAAAb,SAAA,sBAAAV,IAAA,CAAAK,IAAA,CAAAc,MAAA,cAAAK,WAAA;QACAC,KAAA;MACA;QACAA,KAAA;QACA,KAAAC,IAAA,CAAAC,IAAA;QAEA,SAAAP,CAAA,SAAApB,IAAA,CAAAK,IAAA;UACA,SAAAL,IAAA,CAAAK,IAAA,CAAAe,CAAA;YACA,KAAApB,IAAA,QAAA4B,QAAA,CAAAR,CAAA,gBAAApB,IAAA,CAAAK,IAAA,CAAAe,CAAA;UACA;QACA;QAEA,IAAAS,SAAA;QACA,IAAAC,MAAA;QACA,SAAAC,UAAA;UACAF,SAAA,GACAvC,MAAA,CAAA0C,UAAA,YAAAC,SAAA,cAAAtB,MAAA,CAAAC,OAAA,CAAAsB,WAAA;UACAJ,MAAA;QACA;UACAD,SAAA,GAAAvC,MAAA,CAAA0C,UAAA,YAAArB,MAAA,CAAAC,OAAA,CAAAsB,WAAA;UACAJ,MAAA;QACA;QAEAK,KAAA,CAAAN,SAAA;UACAC,MAAA,EAAAA,MAAA;UACAM,OAAA;YACA;YACAC,SAAA,OAAA1B,MAAA,CAAAC,OAAA,CAAA0B,aAAA;YACAC,OAAA,OAAA5B,MAAA,CAAAC,OAAA,CAAAsB;UACA;UACAM,IAAA,EAAAC,IAAA,CAAAC,SAAA,MAAA1C,IAAA;QACA,GACA2C,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAA/C,IAAA;UACA,IAAAA,IAAA,CAAAkD,QAAA;YACA,KAAAC,YAAA,CAAAC,OAAA;cACAC,OAAA,EAAArD,IAAA,CAAAqD;YACA;YACA,UAAAlB,UAAA;cACA,KAAAmB,OAAA;YACA;YACA,SAAAxC,SAAA;cACA,KAAAyC,KAAA;YACA;UACA;UACA,IAAAvD,IAAA,CAAAkD,QAAA;YACA,KAAAC,YAAA,CAAAK,KAAA;cACAH,OAAA,EAAArD,IAAA,CAAAqD;YACA;UACA;QACA,GACAI,KAAA,CAAAD,KAAA;UACA,KAAA1B,IAAA,CAAA0B,KAAA,YAAAA,KAAA;UACA,KAAAL,YAAA,CAAAK,KAAA;YACAH,OAAA;UACA;QACA;MACA;IACA;IACAC,QAAA5B,KAAA;MACA,IAAAA,KAAA,IAAAA,KAAA,CAAAC,cAAA;QACAD,KAAA,CAAAC,cAAA;MACA;MACA,KAAAvB,IAAA,CAAAC,KAAA;MACA,KAAAD,IAAA,CAAAE,WAAA;MACA,KAAAE,QAAA;MACA,KAAAJ,IAAA,CAAAS,WAAA;MACA,KAAAT,IAAA,CAAAK,IAAA;MACA,KAAAS,IAAA;MACA,KAAAwC,SAAA;QACA,KAAAxC,IAAA;MACA;IACA;IACAyC,cAAAxD,KAAA;MACA,KAAAC,IAAA,CAAAK,IAAA,GAAAN,KAAA;IACA;EACA;EACAyD,QAAA;IACAhC,YAAA;MACA,YAAAxB,IAAA,CAAAC,KAAA,CAAAkB,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}